---
description: 
globs: 
alwaysApply: false
---
# WatchLog Insights - Project Overview

## Project Description
WatchLog Insights is a data-driven YouTube watching habit analysis tool that helps users understand their viewing patterns and make more conscious media consumption decisions.

## Architecture
This is a full-stack application with:
- **Backend**: FastAPI Python server providing REST API endpoints
- **Frontend**: Next.js 14 React application with TypeScript and Tailwind CSS
- **Data**: Currently uses mock data for YouTube watching habits

## Key Files and Directories

### Project Configuration
- [pyproject.toml](mdc:pyproject.toml) - Python project configuration with dependencies and linting rules
- [Makefile](mdc:Makefile) - Development commands for formatting, linting, and testing
- [start-servers.sh](mdc:start-servers.sh) - Script to start both backend and frontend servers
- [README.md](mdc:README.md) - Comprehensive project documentation

### Backend (FastAPI)
- [backend/main.py](mdc:backend/main.py) - Main FastAPI application with API endpoints
- [backend/requirements.txt](mdc:backend/requirements.txt) - Python dependencies

### Frontend (Next.js)
- [frontend/app/page.tsx](mdc:frontend/app/page.tsx) - Main dashboard page component
- [frontend/app/layout.tsx](mdc:frontend/app/layout.tsx) - Root layout component
- [frontend/app/globals.css](mdc:frontend/app/globals.css) - Global styles
- [frontend/package.json](mdc:frontend/package.json) - Node.js dependencies and scripts
- [frontend/tailwind.config.js](mdc:frontend/tailwind.config.js) - Tailwind CSS configuration

## Development Workflow
1. Use `./start-servers.sh` to start both backend (port 8000) and frontend (port 3000)
2. Backend API docs available at http://localhost:8000/docs
3. Frontend dashboard available at http://localhost:3000
4. Use `make format` for code formatting with Black and isort
5. Use `make lint` for code quality checks

## Technology Stack
- **Backend**: FastAPI, Pydantic, Uvicorn
- **Frontend**: Next.js 14, TypeScript, Tailwind CSS, Recharts, Axios
- **Code Quality**: Black, isort, ruff, mypy, pylint, pre-commit
